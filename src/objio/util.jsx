// this is util.jsx
/**
 * found here
 * http://stackoverflow.com/questions/9223701/math-round-adding-leading-zeros
 *
 * adds digits to the frame number to keep it in order
 * @param  {Number Integer} number the number to pad
 * @param  {Number Integer} length the number of digits to add
 * @return {String}        this is part of the filename like *.00001.obj
 */

var pad = function (number, length) {
  var str = '' + number;
  while (str.length < length) {
    str = '0' + str;
  }
  return str;
};

/**
 * Checks what type of operating system
 * I think we need to write windows Linefeeds and unix linefeeds
 * @return {Array of Bool} To be really shure we check for both
 */

var checkOSSave = function () {
  var os_w = null;
  var os_m = null;
  os_w = ($.os.search(/windows/i) != -1) ? true : false;
  os_m = ($.os.search(/macintosh/i) != -1) ? true : false;
  return [os_w, os_m];
};

/**
 * sort the vericies
 * I never really understood these
 * @param  {[type]} a [description]
 * @param  {[type]} b [description]
 * @return {[type]}   [description]
 */

var sortfunc = function (a, b) {
  return a - b;
};


/**
 * Read in a text file created by the user
 * @return {Array of Strings} Needs to be joined to have a full string
 */
var filereader = function (){
    var textFile = File.openDialog("Select a text file to import.", "*.*", false);
    var textLines = [];
    if (textFile !== null) {
      textFile.open('r', undefined, undefined);
      while (!textFile.eof) {
        textLines[textLines.length] = textFile.readln();
      }
      textFile.close();
    }
    if (textLines.length < 1) {
      alert("ERROR Reading file");
      return null;
    } else {
      // if (DEBUG) $.writeln(textLines);
      return textLines;
    }
};


/**
 * Read in a text files created by the user
 * @return {Array of Array of Strings} Needs to be joined to have a full string
 */
var multifilereader = function() {
  var textFiles = File.openDialog("Select a text file to import.", "*.*", true);
  if (textFiles.length !== 0) {
    var arr = [];
    for (var i = 0; i < textFiles.length; i++) {
      var textLines = [];
      if (textFile[i] !== null) {
        textFile[i].open('r', undefined, undefined);
        while (!textFile[i].eof) {
          textLines[textLines.length] = textFile[i].readln();
        }
        textFile[i].close();
      }
      if (textLines.length < 1) {
        alert("ERROR Reading file");
        continue;
      } else {
        // if (DEBUG) $.writeln(textLines);
        arr.push(textLines);
      }
    } // end if i loop
    return arr;
  } else {
    if (DEBUG) $.writeln("abort by user");
    return null;
  }
};

/**
 * writeArray writes Array data to File
 * @param  {File} txtFile  The target textfile
 * @param  {Array Of Strings} arr    the Array to write
 * @param  {String} grName   [description]
 * @param  {String} comment  [description]
 * @param  {Boolean} addFaces [description]
 * @return {Nothing}          [description]
 */

var writeArray = function (txtFile, arr, grName, comment, addFaces) {
  var out;
  if (txtFile !== '') {
    //Open the file for writing.
    out = txtFile.open('e', undefined, undefined);

    txtFile.encoding = "UTF-8";

    var res = checkOSSave();
    if ((res[0] === true) && (res[1] === false)) {
      txtFile.lineFeed = "Windows"; //convert to Windows linefeed
    } else if ((res[0] === false) && (res[1] === true)) {
      txtFile.lineFeed = "Unix"; //convert to UNIX linefeed
    } else {
      alert("I cant determine your OS.\nI will use Unix linefeeds.");
      txtFile.lineFeed = "Unix"; //convert to UNIX linefeed
    }

    var openString = "# WaveFront *.obj file generated by Adobe After Effects\n" +
      "# with obj-export.jsx\n";
    // var groupName = "g " + grName;
    txtFile.writeln(openString);
    if (comment.length > 0) {
      txtFile.writeln(comment);
    }

    arr.sort(sortfunc); //must sort vertices to get rid of errant vertex at the end
  }
  if (out !== false) {
    for (var i = 0; i < arr.length; i++) {

      txtFile.writeln("v " + arr[i]);
    }

    // this is not reachable by UI
    //
    if (addFaces === true) {
      // not fit for E3D
      var e3dface_str = "f ";
      for (var j = 0; j < arr.length; j++) {
        e3dface_str += " " + String(j + 1);
      }
      txtFile.writeln(e3dface_str);
    }

    txtFile.close();
    // txtFile.execute();
  }
};
// end of util.jsx